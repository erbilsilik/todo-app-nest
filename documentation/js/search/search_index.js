var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.581,1,1.566]],["body/modules/AppModule.html",[0,0.835,1,2.801,2,0.909,3,1.042,4,1.383,5,1.383,6,1.042,7,1.684,8,1.197,9,1.928,10,1.928,11,2.311,12,0.053,13,2.311,14,1.946,15,1.383,16,1.383,17,0.513,18,0.436,19,0.436,20,2.401,21,2.712,22,1.055,23,3.379,24,2.401,25,3.379,26,0.909,27,2.401,28,3.379,29,3.379,30,1.928,31,2.401,32,2.401,33,2.401,34,2.401,35,2.401,36,2.401,37,1.616,38,2.401,39,1.616,40,2.274,41,3.379,42,0.513,43,0.236,44,0.023,45,0.033,46,0.023]],["title/classes/BaseController.html",[43,0.268,47,1.83]],["body/classes/BaseController.html",[12,0.052,17,0.684,18,0.581,19,0.581,42,0.684,43,0.315,44,0.031,45,0.04,46,0.031,47,2.758,48,1.843,49,2.57,50,0.796,51,2.361,52,4.522,53,4.099,54,4.099,55,1.389,56,3.201,57,1.843,58,1.843,59,1.057,60,1.843,61,4.099,62,1.595,63,3.291,64,1.595]],["title/modules/ConfigModule.html",[0,0.581,11,1.355]],["body/modules/ConfigModule.html",[0,0.926,2,1.11,3,1.272,4,1.688,5,1.688,6,1.272,7,1.93,8,2.16,11,2.389,12,0.052,14,2.229,15,1.688,16,1.688,17,0.626,18,0.532,19,0.532,22,0.963,26,1.11,40,1.973,42,0.626,43,0.288,44,0.029,45,0.038,46,0.029,65,2.353,66,2.353,67,2.212,68,2.931,69,2.931,70,2.931,71,1.272,72,2.931]],["title/classes/ConfigService.html",[43,0.268,67,1.18]],["body/classes/ConfigService.html",[12,0.052,17,0.402,18,0.342,19,0.342,22,0.846,37,1.267,42,0.605,43,0.185,44,0.018,45,0.028,46,0.018,48,1.084,50,0.468,51,1.63,55,1.476,57,1.63,58,1.63,59,1.123,60,1.63,62,1.695,64,0.938,67,1.228,71,0.817,73,1.267,74,1.904,75,2.866,76,1.476,77,2.839,78,2.83,79,1.511,80,2.272,81,1.535,82,2.83,83,1.882,84,2.272,85,1.882,86,2.272,87,2.272,88,1.63,89,2.272,90,2.272,91,2.272,92,2.272,93,2.272,94,2.272,95,1.41,96,2.272,97,1.904,98,1.511,99,1.267,100,2.272,101,0.817,102,1.511,103,2.288,104,1.511,105,1.511,106,1.511,107,1.511,108,2.272,109,1.511,110,1.511,111,1.511,112,1.511,113,1.511,114,1.267,115,1.267,116,1.511,117,1.511,118,1.511,119,2.73,120,0.817,121,2.272,122,1.511,123,1.511,124,1.511,125,1.511,126,1.511]],["title/modules/DatabaseModule.html",[0,0.581,127,1.355]],["body/modules/DatabaseModule.html",[0,0.927,2,1.326,7,1.746,8,1.746,12,0.052,17,0.748,18,0.636,19,0.636,22,1.079,26,1.326,42,0.748,43,0.345,44,0.034,45,0.042,46,0.034,127,2.162,128,3.502,129,3.172,130,3.502]],["title/interfaces/EnvConfig.html",[77,1.566,101,1.18]],["body/interfaces/EnvConfig.html",[12,0.053,17,0.488,18,0.414,19,0.414,22,0.946,37,1.536,42,0.697,43,0.225,44,0.022,45,0.032,46,0.022,55,0.991,62,1.138,64,1.138,67,0.991,71,0.991,73,1.536,75,2.194,76,0.991,77,2.704,80,1.833,81,1.661,84,1.833,86,1.833,87,1.833,88,1.315,89,1.833,90,1.833,91,1.833,92,1.833,93,1.833,94,1.833,95,1.138,96,1.833,97,2.194,98,1.833,99,1.536,100,2.617,101,0.991,102,2.617,103,2.559,104,1.833,105,1.833,106,1.833,107,1.833,108,2.617,109,1.833,110,1.833,111,1.833,112,1.833,113,1.833,114,1.536,115,1.536,116,1.833,117,1.833,118,1.833,119,3.053,120,0.991,121,2.617,122,1.833,123,1.833,124,1.833,125,1.833,126,1.833,131,1.536,132,2.283,133,2.283]],["title/interfaces/Todo.html",[101,1.18,134,1.355]],["body/interfaces/Todo.html",[12,0.051,17,0.657,18,0.558,19,0.558,22,0.994,42,0.657,44,0.03,45,0.039,46,0.03,50,0.765,59,1.32,74,2.689,76,1.734,81,1.681,101,1.335,131,2.071,134,1.992,135,2.47,136,3.996,137,4.438,138,2.567,139,3.161,140,2.47,141,2.47]],["title/controllers/TodoController.html",[142,1.566,143,1.566]],["body/controllers/TodoController.html",[12,0.053,17,0.32,18,0.272,19,0.272,22,0.833,26,0.567,39,1.008,42,0.32,43,0.147,44,0.015,45,0.023,46,0.015,50,0.373,51,1.366,55,1.584,57,2.102,58,2.102,59,1.206,60,2.102,62,1.82,63,2.931,64,1.82,76,0.65,81,1.749,134,0.747,142,0.863,143,1.366,144,1.203,145,1.498,146,1.498,147,2.765,148,1.904,149,2.365,150,1.904,151,1.904,152,1.904,153,1.203,154,2.336,155,2.931,156,2.945,157,1.498,158,1.203,159,2.372,160,1.498,161,3.118,162,1.203,163,2.372,164,1.498,165,1.203,166,1.498,167,2.365,168,1.596,169,1.203,170,2.372,171,1.498,172,1.498,173,2.372,174,1.498,175,1.498,176,1.203,177,1.498,178,1.498,179,1.278,180,1.203,181,1.203,182,1.203,183,1.498,184,1.498,185,1.498,186,2.457,187,1.498,188,3.651,189,1.498,190,1.498,191,1.498,192,3.35,193,1.498,194,1.498,195,1.498,196,1.498,197,1.498,198,1.498]],["title/classes/TodoDto.html",[43,0.268,154,1.355]],["body/classes/TodoDto.html",[12,0.052,17,0.583,18,0.495,19,0.495,22,0.918,42,0.583,43,0.363,44,0.027,45,0.036,46,0.027,48,1.572,50,0.679,55,1.602,59,0.902,74,2.484,76,2.093,81,1.398,95,1.361,120,1.185,138,2.233,139,3.15,154,1.84,155,2.964,199,2.192,200,2.964,201,3.692,202,2.73,203,2.73,204,3.692,205,3.692,206,2.73,207,2.73,208,2.73,209,3.692,210,2.73,211,2.192,212,2.73,213,2.73]],["title/modules/TodoModule.html",[0,0.581,13,1.355]],["body/modules/TodoModule.html",[0,0.878,2,1,3,1.145,4,1.52,5,1.52,6,1.145,7,2.049,8,1.316,12,0.052,13,2.481,14,2.078,15,1.52,16,1.52,17,0.564,18,0.479,19,0.479,21,2.897,22,1.151,26,1,39,2.428,42,0.564,43,0.26,44,0.026,45,0.035,46,0.026,127,2.38,143,2.367,179,2.072,180,2.119,214,2.119,215,2.119,216,2.119,217,2.64,218,2.64,219,2.64,220,2.428,221,2.64]],["title/injectables/TodoService.html",[179,1.18,222,1.566]],["body/injectables/TodoService.html",[12,0.052,17,0.346,18,0.294,19,0.294,22,0.943,26,0.613,42,0.346,43,0.159,44,0.016,45,0.025,46,0.016,50,0.403,51,1.453,55,1.742,57,2.312,58,2.312,59,1.326,60,2.312,62,1.889,64,1.743,71,1.095,75,1.09,76,0.703,79,1.3,81,1.641,95,0.807,103,1.697,120,0.703,134,0.807,138,0.807,140,1.3,141,1.3,147,2.781,148,2.025,149,2.025,150,2.025,151,2.025,152,2.025,153,2.025,154,2.348,158,2.025,161,2.487,162,1.3,165,2.025,167,1.3,168,2.996,169,2.025,176,1.3,179,1.095,181,1.3,182,1.3,186,2.353,222,1.453,223,1.62,224,1.3,225,1.62,226,3.497,227,1.62,228,2.523,229,1.62,230,1.62,231,1.62,232,1.62,233,1.62,234,1.62,235,1.3,236,1.62,237,1.62,238,1.62,239,1.62,240,1.62,241,1.62,242,2.523,243,1.62,244,1.62,245,1.3,246,1.62]],["title/coverage.html",[247,2.478]],["body/coverage.html",[0,0.556,6,1.129,12,0.051,19,0.472,43,0.402,44,0.025,45,0.035,46,0.025,47,1.752,49,2.09,59,0.86,67,1.129,71,1.129,73,2.405,77,1.499,101,1.551,129,1.752,134,1.297,135,2.09,142,1.499,143,1.499,144,2.09,154,1.297,179,1.129,199,2.09,220,1.752,222,1.499,224,2.09,247,1.752,248,2.603,249,2.603,250,2.603,251,2.603,252,2.603,253,5.143,254,4.756,255,2.09,256,4.393,257,3.574,258,2.405,259,2.603,260,2.603,261,2.603,262,2.09,263,1.752,264,2.09,265,2.603,266,2.603,267,2.603]],["title/dependencies.html",[3,1.416,268,2.286]],["body/dependencies.html",[3,1.381,12,0.053,26,1.205,30,2.555,43,0.402,44,0.031,45,0.04,46,0.031,97,2.141,99,2.141,147,1.833,211,2.555,269,3.182,270,4.51,271,3.182,272,3.182,273,3.182,274,3.182,275,3.182,276,3.182,277,3.182,278,3.182,279,3.182,280,3.182,281,3.182,282,3.182,283,3.182,284,3.182,285,3.182,286,3.182,287,3.182]],["title/miscellaneous/enumerations.html",[288,0.992,289,2.619]],["body/miscellaneous/enumerations.html",[12,0.049,44,0.037,45,0.044,46,0.037,50,0.936,120,1.967,138,2.259,263,2.532,288,1.632,289,3.02,290,3.02,291,4.532,292,4.532]],["title/miscellaneous/functions.html",[288,0.992,293,2.619]],["body/miscellaneous/functions.html",[6,2.154,12,0.046,44,0.039,45,0.046,46,0.039,50,0.982,258,2.657,288,1.713,293,3.17,294,3.17]],["title/index.html",[50,0.569,295,2.286,296,2.286]],["body/index.html",[12,0.051,18,0.443,44,0.024,45,0.033,46,0.024,114,1.644,115,2.301,247,1.644,297,2.443,298,2.443,299,3.42,300,2.443,301,2.443,302,2.443,303,2.443,304,2.443,305,2.443,306,2.443,307,2.443,308,2.443,309,2.443,310,3.946,311,2.443,312,2.443,313,2.443,314,2.443,315,4.787,316,2.443,317,2.443,318,2.443,319,4.663,320,2.443,321,2.443,322,3.42,323,2.443,324,2.443,325,2.443,326,3.42,327,2.443,328,2.443,329,2.443,330,3.42,331,3.42,332,2.443,333,2.443,334,2.443,335,2.443,336,2.443,337,1.961,338,2.443,339,2.443,340,2.443,341,2.443,342,2.443,343,2.443,344,2.443,345,2.443,346,2.443,347,2.443,348,2.443,349,2.443,350,2.443,351,2.443,352,2.443,353,2.443,354,2.443,355,2.443]],["title/modules.html",[2,1.394]],["body/modules.html",[1,2.096,2,1.378,11,1.814,12,0.043,13,1.814,44,0.036,45,0.043,46,0.036,127,1.814,337,3.849,356,4.794,357,4.794,358,4.992,359,3.64,360,3.64]],["title/overview.html",[361,2.956]],["body/overview.html",[0,0.613,1,2.819,2,1.087,3,1.246,4,1.653,5,1.653,6,1.246,7,1.431,8,1.431,9,2.305,10,2.305,11,2.279,12,0.049,13,2.49,14,2.199,15,1.653,16,1.653,44,0.028,45,0.037,46,0.028,48,1.653,65,2.305,66,2.305,67,1.984,127,2.138,131,1.932,142,1.653,179,1.862,214,2.305,215,2.305,216,2.305,222,1.653,361,2.305,362,2.871,363,3.818,364,2.305,365,2.871]],["title/miscellaneous/variables.html",[88,1.879,288,0.992]],["body/miscellaneous/variables.html",[0,0.735,12,0.053,40,2.316,44,0.024,45,0.034,46,0.024,50,0.613,59,1.491,71,1.07,81,0.933,88,1.419,95,2.139,120,1.72,129,2.316,138,1.715,139,1.659,147,1.419,168,1.659,186,1.659,200,1.979,220,2.316,235,1.979,245,3.183,255,1.979,258,1.659,262,1.979,263,1.659,264,3.183,288,1.07,290,1.979,294,1.979,364,1.979,366,2.465,367,2.465,368,3.441,369,3.441,370,2.465,371,2.465,372,2.465,373,2.465,374,2.465,375,2.465,376,3.441,377,2.465,378,2.465,379,2.465,380,2.465,381,2.465]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseController.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"interfaces/Todo.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["0.1.12",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["0.10.0",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":257,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":265,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":363,"title":{},"body":{"overview.html":{}}}],["1/4",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["15.1.1",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":365,"title":{},"body":{"overview.html":{}}}],["2.10.0",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":364,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.1.0",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":362,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["6379",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["8.1.0",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["amazing",{"_index":338,"title":{},"body":{"index.html":{}}}],["angular",{"_index":308,"title":{},"body":{"index.html":{}}}],["app",{"_index":317,"title":{},"body":{"index.html":{}}}],["app_interceptor",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":305,"title":{},"body":{"index.html":{}}}],["applied",{"_index":94,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":147,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":348,"title":{},"body":{"index.html":{}}}],["available",{"_index":360,"title":{},"body":{"modules.html":{}}}],["await",{"_index":186,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":339,"title":{},"body":{"index.html":{}}}],["basecontroller",{"_index":47,"title":{"classes/BaseController.html":{}},"body":{"classes/BaseController.html":{},"coverage.html":{}}}],["bdmth.mongodb.net/test?retrywrites=true&w=majority",{"_index":371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":173,"title":{},"body":{"controllers/TodoController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/TodoModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":358,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":356,"title":{},"body":{"modules.html":{}}}],["building",{"_index":300,"title":{},"body":{"index.html":{}}}],["cache",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["cacheinterceptor",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":43,"title":{"classes/BaseController.html":{},"classes/ConfigService.html":{},"classes/TodoDto.html":{}},"body":{"modules/AppModule.html":{},"classes/BaseController.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":48,"title":{},"body":{"classes/BaseController.html":{},"classes/ConfigService.html":{},"classes/TodoDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":65,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":66,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_todomodule",{"_index":214,"title":{},"body":{"modules/TodoModule.html":{},"overview.html":{}}}],["cluster_todomodule_imports",{"_index":215,"title":{},"body":{"modules/TodoModule.html":{},"overview.html":{}}}],["cluster_todomodule_providers",{"_index":216,"title":{},"body":{"modules/TodoModule.html":{},"overview.html":{}}}],["completed",{"_index":292,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["config",{"_index":104,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["config.module",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["config.service",{"_index":69,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configmodule",{"_index":11,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":67,"title":{"classes/ConfigService.html":{}},"body":{"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{},"overview.html":{}}}],["configservice(`${process.env.node_env}.env",{"_index":72,"title":{},"body":{"modules/ConfigModule.html":{}}}],["connection",{"_index":376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('todo",{"_index":377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":103,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/TodoService.html":{}}}],["constructor",{"_index":79,"title":{},"body":{"classes/ConfigService.html":{},"injectables/TodoService.html":{}}}],["constructor(@inject('todo_model",{"_index":237,"title":{},"body":{"injectables/TodoService.html":{}}}],["constructor(filepath",{"_index":80,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["constructor(private",{"_index":184,"title":{},"body":{"controllers/TodoController.html":{}}}],["constructor(todomodel",{"_index":225,"title":{},"body":{"injectables/TodoService.html":{}}}],["controller",{"_index":142,"title":{"controllers/TodoController.html":{}},"body":{"controllers/TodoController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('todos",{"_index":183,"title":{},"body":{"controllers/TodoController.html":{}}}],["controllers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{}}}],["controllers/todo.controller",{"_index":219,"title":{},"body":{"modules/TodoModule.html":{}}}],["coverage",{"_index":247,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":148,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["create(@body",{"_index":185,"title":{},"body":{"controllers/TodoController.html":{}}}],["create(tododto",{"_index":153,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["createdtodo",{"_index":238,"title":{},"body":{"injectables/TodoService.html":{}}}],["createdtodo.save",{"_index":240,"title":{},"body":{"injectables/TodoService.html":{}}}],["data",{"_index":63,"title":{},"body":{"classes/BaseController.html":{},"controllers/TodoController.html":{}}}],["database.providers",{"_index":130,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":218,"title":{},"body":{"modules/TodoModule.html":{}}}],["database_connection",{"_index":368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":127,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/TodoModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":129,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}],["decorators",{"_index":155,"title":{},"body":{"controllers/TodoController.html":{},"classes/TodoDto.html":{}}}],["default",{"_index":95,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"classes/TodoDto.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":117,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["defined",{"_index":55,"title":{},"body":{"classes/BaseController.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"injectables/TodoService.html":{}}}],["delete",{"_index":149,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["delete(':id",{"_index":159,"title":{},"body":{"controllers/TodoController.html":{}}}],["delete(@param('id",{"_index":197,"title":{},"body":{"controllers/TodoController.html":{}}}],["delete(id",{"_index":158,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/TodoModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":309,"title":{},"body":{"index.html":{}}}],["development",{"_index":318,"title":{},"body":{"index.html":{}}}],["document",{"_index":137,"title":{},"body":{"interfaces/Todo.html":{}}}],["documentation",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":97,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"dependencies.html":{}}}],["dotenv.parse(fs.readfilesync(filepath",{"_index":105,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["dto/todo.dto",{"_index":181,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["e2e",{"_index":327,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":301,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":86,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["enumerations",{"_index":289,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envconfig",{"_index":77,"title":{"interfaces/EnvConfig.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["envvarsschema",{"_index":108,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error",{"_index":119,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error(`config",{"_index":124,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["error.message",{"_index":126,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["export",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseController.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"interfaces/Todo.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}],["express",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":136,"title":{},"body":{"interfaces/Todo.html":{}}}],["false",{"_index":374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseController.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"interfaces/Todo.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["filepath",{"_index":83,"title":{},"body":{"classes/ConfigService.html":{}}}],["find",{"_index":150,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["find(@param('id",{"_index":193,"title":{},"body":{"controllers/TodoController.html":{}}}],["find(id",{"_index":162,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["findall",{"_index":151,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["findall(@query",{"_index":190,"title":{},"body":{"controllers/TodoController.html":{}}}],["findall(query",{"_index":165,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["framework",{"_index":299,"title":{},"body":{"index.html":{}}}],["fs",{"_index":100,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["function",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":293,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":163,"title":{},"body":{"controllers/TodoController.html":{}}}],["getting",{"_index":295,"title":{"index.html":{}},"body":{}}],["graph",{"_index":359,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":334,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":99,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"dependencies.html":{}}}],["header",{"_index":175,"title":{},"body":{"controllers/TodoController.html":{}}}],["heavily",{"_index":306,"title":{},"body":{"index.html":{}}}],["here",{"_index":345,"title":{},"body":{"index.html":{}}}],["host",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["httpcode",{"_index":178,"title":{},"body":{"controllers/TodoController.html":{}}}],["httpexception",{"_index":234,"title":{},"body":{"injectables/TodoService.html":{}}}],["https://nestjs.com",{"_index":352,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":176,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["httpstatus.created",{"_index":189,"title":{},"body":{"controllers/TodoController.html":{}}}],["httpstatus.ok",{"_index":192,"title":{},"body":{"controllers/TodoController.html":{}}}],["id",{"_index":161,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["identifier",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"interfaces/Todo.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{}}}],["including",{"_index":93,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["incomplete",{"_index":291,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":50,"title":{"index.html":{}},"body":{"classes/BaseController.html":{},"classes/ConfigService.html":{},"interfaces/Todo.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"injectables/TodoService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":132,"title":{},"body":{"interfaces/EnvConfig.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseController.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"interfaces/Todo.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{}}}],["inject",{"_index":235,"title":{},"body":{"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":222,"title":{"injectables/TodoService.html":{}},"body":{"injectables/TodoService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":223,"title":{},"body":{"injectables/TodoService.html":{}}}],["inspired",{"_index":307,"title":{},"body":{"index.html":{}}}],["installation",{"_index":314,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":316,"title":{},"body":{"index.html":{}}}],["interface",{"_index":101,"title":{"interfaces/EnvConfig.html":{},"interfaces/Todo.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/Todo.html":{},"coverage.html":{}}}],["interfaces",{"_index":131,"title":{},"body":{"interfaces/EnvConfig.html":{},"interfaces/Todo.html":{},"overview.html":{}}}],["interfaces/todo.interface",{"_index":182,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["isboolean",{"_index":207,"title":{},"body":{"classes/TodoDto.html":{}}}],["isenum",{"_index":208,"title":{},"body":{"classes/TodoDto.html":{}}}],["isenum(status",{"_index":201,"title":{},"body":{"classes/TodoDto.html":{}}}],["isstring",{"_index":209,"title":{},"body":{"classes/TodoDto.html":{}}}],["isstring()@minlength(3",{"_index":203,"title":{},"body":{"classes/TodoDto.html":{}}}],["javascript",{"_index":91,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi",{"_index":98,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.number().default(3000",{"_index":118,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.object",{"_index":110,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.objectschema",{"_index":109,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.string",{"_index":112,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["joi.validate",{"_index":122,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["join",{"_index":341,"title":{},"body":{"index.html":{}}}],["jsonresult",{"_index":53,"title":{},"body":{"classes/BaseController.html":{}}}],["jsonresult(payload",{"_index":54,"title":{},"body":{"classes/BaseController.html":{}}}],["kamil",{"_index":349,"title":{},"body":{"index.html":{}}}],["key",{"_index":102,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}],["license",{"_index":355,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":331,"title":{},"body":{"index.html":{}}}],["limit",{"_index":241,"title":{},"body":{"injectables/TodoService.html":{}}}],["localhost",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["manager",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseController.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"interfaces/Todo.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":204,"title":{},"body":{"classes/TodoDto.html":{}}}],["metadata",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":51,"title":{},"body":{"classes/BaseController.html":{},"classes/ConfigService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["min",{"_index":380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minlength",{"_index":210,"title":{},"body":{"classes/TodoDto.html":{}}}],["minlength(3",{"_index":213,"title":{},"body":{"classes/TodoDto.html":{}}}],["miscellaneous",{"_index":288,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":330,"title":{},"body":{"index.html":{}}}],["mode",{"_index":322,"title":{},"body":{"index.html":{}}}],["model",{"_index":226,"title":{},"body":{"injectables/TodoService.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/TodoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/TodoModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/TodoModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":140,"title":{},"body":{"interfaces/Todo.html":{},"injectables/TodoService.html":{}}}],["mongoose.connect('mongodb+srv://todo:123reklamlar@cluster0",{"_index":370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":344,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":350,"title":{},"body":{"index.html":{}}}],["name",{"_index":58,"title":{},"body":{"classes/BaseController.html":{},"classes/ConfigService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["needed",{"_index":87,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["nest",{"_index":310,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":354,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":71,"title":{},"body":{"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/TodoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":298,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":111,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["notfoundexception",{"_index":236,"title":{},"body":{"injectables/TodoService.html":{}}}],["npm",{"_index":315,"title":{},"body":{"index.html":{}}}],["object",{"_index":92,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["open",{"_index":332,"title":{},"body":{"index.html":{}}}],["optional",{"_index":60,"title":{},"body":{"classes/BaseController.html":{},"classes/ConfigService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}],["overview",{"_index":361,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":268,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":174,"title":{},"body":{"controllers/TodoController.html":{}}}],["parameters",{"_index":57,"title":{},"body":{"classes/BaseController.html":{},"classes/ConfigService.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["payload",{"_index":61,"title":{},"body":{"classes/BaseController.html":{}}}],["please",{"_index":342,"title":{},"body":{"index.html":{}}}],["port",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["post",{"_index":156,"title":{},"body":{"controllers/TodoController.html":{}}}],["prefix",{"_index":145,"title":{},"body":{"controllers/TodoController.html":{}}}],["private",{"_index":75,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"injectables/TodoService.html":{}}}],["production",{"_index":114,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["progressive",{"_index":297,"title":{},"body":{"index.html":{}}}],["project",{"_index":333,"title":{},"body":{"index.html":{}}}],["promise",{"_index":168,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":74,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/Todo.html":{},"classes/TodoDto.html":{}}}],["protected",{"_index":52,"title":{},"body":{"classes/BaseController.html":{}}}],["provide",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}],["providers/todo.providers",{"_index":221,"title":{},"body":{"modules/TodoModule.html":{}}}],["provision",{"_index":116,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["put",{"_index":172,"title":{},"body":{"controllers/TodoController.html":{}}}],["put(':id",{"_index":170,"title":{},"body":{"controllers/TodoController.html":{}}}],["query",{"_index":167,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["query.limit",{"_index":242,"title":{},"body":{"injectables/TodoService.html":{}}}],["read",{"_index":343,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":76,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/Todo.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"injectables/TodoService.html":{}}}],["redisstore",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["reflect",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":313,"title":{},"body":{"index.html":{}}}],["required",{"_index":379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":177,"title":{},"body":{"controllers/TodoController.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}],["result",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseController.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"interfaces/Todo.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseController.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"interfaces/Todo.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":64,"title":{},"body":{"classes/BaseController.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["returns",{"_index":62,"title":{},"body":{"classes/BaseController.html":{},"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["rimraf",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":319,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":302,"title":{},"body":{"index.html":{}}}],["schemas/todo.schemas",{"_index":141,"title":{},"body":{"interfaces/Todo.html":{},"injectables/TodoService.html":{}}}],["server",{"_index":303,"title":{},"body":{"index.html":{}}}],["services/todo.service",{"_index":180,"title":{},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{}}}],["set",{"_index":89,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["short",{"_index":205,"title":{},"body":{"classes/TodoDto.html":{}}}],["side",{"_index":304,"title":{},"body":{"index.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseController.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"interfaces/Todo.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"index.html":{}}}],["sponsors",{"_index":336,"title":{},"body":{"index.html":{}}}],["src/.../database.providers.ts",{"_index":366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":294,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../todo.providers.ts",{"_index":367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../todo.schemas.ts",{"_index":290,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config.module.ts",{"_index":68,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/config.service.ts",{"_index":73,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["src/config.service.ts:10",{"_index":82,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config.service.ts:21",{"_index":85,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/config.service.ts:5",{"_index":133,"title":{},"body":{"interfaces/EnvConfig.html":{}}}],["src/database/database.module.ts",{"_index":128,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.providers.ts",{"_index":255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/dto/todo.dto.ts",{"_index":199,"title":{},"body":{"classes/TodoDto.html":{},"coverage.html":{}}}],["src/dto/todo.dto.ts:11",{"_index":202,"title":{},"body":{"classes/TodoDto.html":{}}}],["src/dto/todo.dto.ts:9",{"_index":206,"title":{},"body":{"classes/TodoDto.html":{}}}],["src/main.ts",{"_index":258,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/todo/controllers/base.controller.ts",{"_index":49,"title":{},"body":{"classes/BaseController.html":{},"coverage.html":{}}}],["src/todo/controllers/base.controller.ts:2",{"_index":56,"title":{},"body":{"classes/BaseController.html":{}}}],["src/todo/controllers/todo.controller.ts",{"_index":144,"title":{},"body":{"controllers/TodoController.html":{},"coverage.html":{}}}],["src/todo/controllers/todo.controller.ts:21",{"_index":157,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/controllers/todo.controller.ts:29",{"_index":166,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/controllers/todo.controller.ts:37",{"_index":164,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/controllers/todo.controller.ts:45",{"_index":171,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/controllers/todo.controller.ts:53",{"_index":160,"title":{},"body":{"controllers/TodoController.html":{}}}],["src/todo/interfaces/todo.interface.ts",{"_index":135,"title":{},"body":{"interfaces/Todo.html":{},"coverage.html":{}}}],["src/todo/providers/todo.providers.ts",{"_index":262,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/todo/schemas/todo.schemas.ts",{"_index":263,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/todo/services/todo.service.ts",{"_index":224,"title":{},"body":{"injectables/TodoService.html":{},"coverage.html":{}}}],["src/todo/services/todo.service.ts:12",{"_index":229,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/services/todo.service.ts:17",{"_index":232,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/services/todo.service.ts:34",{"_index":231,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/services/todo.service.ts:38",{"_index":233,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/services/todo.service.ts:42",{"_index":230,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/services/todo.service.ts:8",{"_index":227,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/todo/todo.module.ts",{"_index":217,"title":{},"body":{"modules/TodoModule.html":{}}}],["start",{"_index":320,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":323,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":324,"title":{},"body":{"index.html":{}}}],["started",{"_index":296,"title":{"index.html":{}},"body":{}}],["starter",{"_index":312,"title":{},"body":{"index.html":{}}}],["statements",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":138,"title":{},"body":{"interfaces/Todo.html":{},"classes/TodoDto.html":{},"injectables/TodoService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["status.incomplete",{"_index":200,"title":{},"body":{"classes/TodoDto.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":188,"title":{},"body":{"controllers/TodoController.html":{}}}],["stay",{"_index":346,"title":{},"body":{"index.html":{}}}],["store",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":81,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"interfaces/Todo.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":337,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":357,"title":{},"body":{"modules.html":{}}}],["table",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":115,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"index.html":{}}}],["test:covsupport",{"_index":329,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":328,"title":{},"body":{"index.html":{}}}],["tests",{"_index":326,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":335,"title":{},"body":{"index.html":{}}}],["this.envconfig",{"_index":106,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["this.todomodel(tododto",{"_index":239,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todomodel.findbyid(id).exec",{"_index":243,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todomodel.findbyidandremove(id",{"_index":246,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todomodel.findbyidandupdate(id",{"_index":244,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.todoservice.create(tododto",{"_index":187,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.delete(id",{"_index":198,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.find(id",{"_index":194,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.findall(query",{"_index":191,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.todoservice.update(id",{"_index":196,"title":{},"body":{"controllers/TodoController.html":{}}}],["this.validateinput(config",{"_index":107,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["throw",{"_index":123,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["timestamps",{"_index":381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":139,"title":{},"body":{"interfaces/Todo.html":{},"classes/TodoDto.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":134,"title":{"interfaces/Todo.html":{}},"body":{"interfaces/Todo.html":{},"controllers/TodoController.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["todo/schemas/todo.schemas",{"_index":212,"title":{},"body":{"classes/TodoDto.html":{}}}],["todo/todo.module",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["todo_model",{"_index":375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todocontroller",{"_index":143,"title":{"controllers/TodoController.html":{}},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{},"coverage.html":{}}}],["tododto",{"_index":154,"title":{"classes/TodoDto.html":{}},"body":{"controllers/TodoController.html":{},"classes/TodoDto.html":{},"injectables/TodoService.html":{},"coverage.html":{}}}],["todomodel",{"_index":228,"title":{},"body":{"injectables/TodoService.html":{}}}],["todomodule",{"_index":13,"title":{"modules/TodoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TodoModule.html":{},"modules.html":{},"overview.html":{}}}],["todoproviders",{"_index":220,"title":{},"body":{"modules/TodoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["todos",{"_index":146,"title":{},"body":{"controllers/TodoController.html":{}}}],["todoschema",{"_index":264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["todoservice",{"_index":179,"title":{"injectables/TodoService.html":{}},"body":{"controllers/TodoController.html":{},"modules/TodoModule.html":{},"injectables/TodoService.html":{},"coverage.html":{},"overview.html":{}}}],["touch",{"_index":347,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":245,"title":{},"body":{"injectables/TodoService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":353,"title":{},"body":{"index.html":{}}}],["type",{"_index":59,"title":{},"body":{"classes/BaseController.html":{},"classes/ConfigService.html":{},"interfaces/Todo.html":{},"controllers/TodoController.html":{},"classes/TodoDto.html":{},"injectables/TodoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":311,"title":{},"body":{"index.html":{}}}],["unit",{"_index":325,"title":{},"body":{"index.html":{}}}],["update",{"_index":152,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["update(@param('id",{"_index":195,"title":{},"body":{"controllers/TodoController.html":{}}}],["update(id",{"_index":169,"title":{},"body":{"controllers/TodoController.html":{},"injectables/TodoService.html":{}}}],["useclass",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefindandmodify",{"_index":373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usenewurlparser",{"_index":372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usevalue",{"_index":70,"title":{},"body":{"modules/ConfigModule.html":{}}}],["valid(['development",{"_index":113,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validated",{"_index":90,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validatedenvconfig",{"_index":121,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validateinput",{"_index":78,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateinput(envconfig",{"_index":84,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validation",{"_index":125,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["validationpipe",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":211,"title":{},"body":{"classes/TodoDto.html":{},"dependencies.html":{}}}],["value",{"_index":120,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"classes/TodoDto.html":{},"injectables/TodoService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":96,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["variable",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":88,"title":{"miscellaneous/variables.html":{}},"body":{"classes/ConfigService.html":{},"interfaces/EnvConfig.html":{},"miscellaneous/variables.html":{}}}],["watch",{"_index":321,"title":{},"body":{"index.html":{}}}],["website",{"_index":351,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":340,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/TodoModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nTodoModule\n\nTodoModule\n\nAppModule -->\n\nTodoModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            TodoModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CacheInterceptor, CacheModule, Module, ValidationPipe } from '@nestjs/common';\nimport { TodoModule } from './todo/todo.module';\nimport { APP_INTERCEPTOR, APP_PIPE } from '@nestjs/core';\nimport { ConfigModule } from './config.module';\n\n@Module({\n  imports: [\n      ConfigModule,\n      CacheModule.register({\n          // store: 'redisStore',\n          // host: 'localhost',\n          // port: 6379,\n      }),\n      TodoModule,\n  ],\n  controllers: [],\n  providers: [\n    {\n      provide: APP_PIPE,\n      useClass: ValidationPipe,\n    },\n    {\n        provide: APP_INTERCEPTOR,\n        useClass: CacheInterceptor,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseController.html":{"url":"classes/BaseController.html","title":"class - BaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/controllers/base.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                jsonResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            jsonResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    jsonResult(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/controllers/base.controller.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { data: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class BaseController {\n    protected jsonResult(payload: any) {\n        return {\n            data: payload,\n        };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigService } from './config.service';\n\n@Module({\n    providers: [\n        {\n            provide: ConfigService,\n            useValue: new ConfigService(`${process.env.NODE_ENV}.env`),\n        },\n    ],\n    exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                envConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                validateInput\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePath: string)\n                    \n                \n                        \n                            \n                                Defined in src/config.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/config.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateInput(envConfig: EnvConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/config.service.ts:21\n                \n            \n\n\n            \n                \n                    Ensures all needed variables are set, and returns the validated JavaScript object\nincluding the applied default values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    envConfig\n                                    \n                                                EnvConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EnvConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as dotenv from 'dotenv';\nimport * as Joi from '@hapi/joi';\nimport * as fs from 'fs';\n\nexport interface EnvConfig {\n    [key: string]: string;\n}\n\nexport class ConfigService {\n    private readonly envConfig: EnvConfig;\n\n    constructor(filePath: string) {\n        const config = dotenv.parse(fs.readFileSync(filePath));\n        this.envConfig = this.validateInput(config);\n    }\n\n    /**\n     * Ensures all needed variables are set, and returns the validated JavaScript object\n     * including the applied default values.\n     */\n    private validateInput(envConfig: EnvConfig): EnvConfig {\n        const envVarsSchema: Joi.ObjectSchema = Joi.object({\n            NODE_ENV: Joi.string()\n                .valid(['development', 'production', 'test', 'provision'])\n                .default('development'),\n            PORT: Joi.number().default(3000),\n        });\n\n        const { error, value: validatedEnvConfig } = Joi.validate(\n            envConfig,\n            envVarsSchema,\n        );\n        if (error) {\n            throw new Error(`Config validation error: ${error.message}`);\n        }\n        return validatedEnvConfig;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n    providers: [...databaseProviders],\n    exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvConfig.html":{"url":"interfaces/EnvConfig.html","title":"interface - EnvConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EnvConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.service.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/config.service.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import * as dotenv from 'dotenv';\nimport * as Joi from '@hapi/joi';\nimport * as fs from 'fs';\n\nexport interface EnvConfig {\n    [key: string]: string;\n}\n\nexport class ConfigService {\n    private readonly envConfig: EnvConfig;\n\n    constructor(filePath: string) {\n        const config = dotenv.parse(fs.readFileSync(filePath));\n        this.envConfig = this.validateInput(config);\n    }\n\n    /**\n     * Ensures all needed variables are set, and returns the validated JavaScript object\n     * including the applied default values.\n     */\n    private validateInput(envConfig: EnvConfig): EnvConfig {\n        const envVarsSchema: Joi.ObjectSchema = Joi.object({\n            NODE_ENV: Joi.string()\n                .valid(['development', 'production', 'test', 'provision'])\n                .default('development'),\n            PORT: Joi.number().default(3000),\n        });\n\n        const { error, value: validatedEnvConfig } = Joi.validate(\n            envConfig,\n            envVarsSchema,\n        );\n        if (error) {\n            throw new Error(`Config validation error: ${error.message}`);\n        }\n        return validatedEnvConfig;\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Todo.html":{"url":"interfaces/Todo.html","title":"interface - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/interfaces/todo.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        status\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Status\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { Status } from '../schemas/todo.schemas';\n\nexport interface Todo extends Document {\n    readonly title: string;\n    readonly status: Status;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TodoController.html":{"url":"controllers/TodoController.html","title":"controller - TodoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TodoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/controllers/todo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                todos\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(todoDto: TodoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/todo/controllers/todo.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todoDto\n                                    \n                                                TodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/todo/controllers/todo.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/todo/controllers/todo.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/todo/controllers/todo.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, todoDto: TodoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/todo/controllers/todo.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    todoDto\n                                    \n                                                TodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Get,\n    Post,\n    Put,\n    Delete,\n    Body,\n    Param,\n    Query,\n    Header, HttpStatus, Res, HttpCode,\n} from '@nestjs/common';\nimport { TodoService } from '../services/todo.service';\nimport { TodoDto } from '../../dto/todo.dto';\nimport { Todo } from '../interfaces/todo.interface';\n\n@Controller('todos')\nexport class TodoController {\n    constructor(private readonly todoService: TodoService) {}\n\n    @Post()\n    async create(@Body() todoDto: TodoDto) {\n        return {\n            data: await this.todoService.create(todoDto),\n            statusCode: HttpStatus.CREATED,\n        };\n    }\n\n    @Get()\n    async findAll(@Query() query: string): Promise {\n        return {\n            data: await this.todoService.findAll(query),\n            statusCode: HttpStatus.OK,\n        };\n    }\n\n    @Get(':id')\n    async find(@Param('id') id: string) {\n        return {\n            data: await this.todoService.find(id),\n            statusCode: HttpStatus.OK,\n        };\n    }\n\n    @Put(':id')\n    async update(@Param('id') id: string, @Body() todoDto: TodoDto) {\n        return {\n            data: await this.todoService.update(id, todoDto),\n            statusCode: HttpStatus.OK,\n        };\n    }\n\n    @Delete(':id')\n    async delete(@Param('id') id: string) {\n        return {\n            data: await this.todoService.delete(id),\n            statusCode: HttpStatus.OK,\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TodoDto.html":{"url":"classes/TodoDto.html","title":"class - TodoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TodoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/todo.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                status\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Status.INCOMPLETE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEnum(Status)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/todo.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@MinLength(3, {message: 'title is to short'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/todo.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsEnum, IsString, MinLength } from 'class-validator';\nimport { Status } from '../todo/schemas/todo.schemas';\n\nexport class TodoDto {\n    @IsString()\n    @MinLength(3, {\n        message: 'title is to short',\n    })\n    readonly title: string;\n    @IsEnum(Status)\n    readonly status = Status.INCOMPLETE;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TodoModule.html":{"url":"modules/TodoModule.html","title":"module - TodoModule","body":"\n                   \n\n\n\n\n    Modules\n    TodoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TodoModule\n\n\n\ncluster_TodoModule_imports\n\n\n\ncluster_TodoModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nTodoModule\n\nTodoModule\n\nTodoModule -->\n\nDatabaseModule->TodoModule\n\n\n\n\n\nTodoService\n\nTodoService\n\nTodoModule -->\n\nTodoService->TodoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/todo/todo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TodoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TodoController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../database/database.module';\nimport { TodoController } from './controllers/todo.controller';\nimport { TodoService } from './services/todo.service';\nimport { todoProviders } from './providers/todo.providers';\n\n@Module({\n    imports: [DatabaseModule],\n    controllers: [TodoController],\n    providers: [TodoService, ...todoProviders],\n})\nexport class TodoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoService.html":{"url":"injectables/TodoService.html","title":"injectable - TodoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TodoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/services/todo.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(todoModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/todo/services/todo.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(todoDto: TodoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/services/todo.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    todoDto\n                                    \n                                                TodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/services/todo.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/services/todo.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query: any)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/services/todo.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, todoDto: TodoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/todo/services/todo.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    todoDto\n                                    \n                                                TodoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { Todo } from '../interfaces/todo.interface';\nimport { TodoDto } from '../../dto/todo.dto';\nimport { Status } from '../schemas/todo.schemas';\n\n@Injectable()\nexport class TodoService {\n\n    constructor(@Inject('TODO_MODEL') private readonly todoModel: Model) {}\n\n    async create(todoDto: TodoDto): Promise {\n        const createdTodo = new this.todoModel(todoDto);\n        return await createdTodo.save();\n    }\n\n    async findAll(query: any = ''): Promise {\n        const limit = query.limit && query.limit  {\n        return await this.todoModel.findById(id).exec();\n    }\n\n    async update(id: string, todoDto: TodoDto): Promise {\n        return await this.todoModel.findByIdAndUpdate(id, todoDto, {new: true});\n    }\n\n    async delete(id: string): Promise {\n        return await this.todoModel.findByIdAndRemove(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config.service.ts\n            \n            class\n            ConfigService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/config.service.ts\n            \n            interface\n            EnvConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dto/todo.dto.ts\n            \n            class\n            TodoDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/todo/controllers/base.controller.ts\n            \n            class\n            BaseController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/todo/controllers/todo.controller.ts\n            \n            controller\n            TodoController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/todo/interfaces/todo.interface.ts\n            \n            interface\n            Todo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/todo/providers/todo.providers.ts\n            \n            variable\n            todoProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/todo/schemas/todo.schemas.ts\n            \n            variable\n            TodoSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/todo/services/todo.service.ts\n            \n            injectable\n            TodoService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^15.1.1\n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            async : ^3.1.0\n        \n            cache-manager : ^2.10.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.10.0\n        \n            dotenv : ^8.1.0\n        \n            reflect-metadata : ^0.1.12\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Status   (src/.../todo.schemas.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/todo/schemas/todo.schemas.ts\n    \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                        \n                            \n                                 INCOMPLETE\n                            \n                        \n                        \n                            \n                                Value : incomplete\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TodoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_TodoModule\n\n\n\ncluster_TodoModule_imports\n\n\n\ncluster_TodoModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nTodoModule\n\nTodoModule\n\nAppModule -->\n\nTodoModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nTodoModule -->\n\nDatabaseModule->TodoModule\n\n\n\n\n\nTodoService\n\nTodoService\n\nTodoModule -->\n\nTodoService->TodoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            todoProviders   (src/.../todo.providers.ts)\n                        \n                        \n                            TodoSchema   (src/.../todo.schemas.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/database.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        provide: 'DATABASE_CONNECTION',\n        useFactory: async (): Promise =>\n            await mongoose.connect('mongodb+srv://todo:123reklamlar@cluster0-bdmth.mongodb.net/test?retryWrites=true&w=majority', { useNewUrlParser: true, useFindAndModify: false }),\n    },\n]\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/todo/providers/todo.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            todoProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        provide: 'TODO_MODEL',\n        useFactory: (connection: Connection) => connection.model('Todo', TodoSchema),\n        inject: ['DATABASE_CONNECTION'],\n    },\n]\n                        \n                    \n\n\n            \n        \n\n    src/todo/schemas/todo.schemas.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TodoSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    title: { type: String, required: true, min: [3] },\n    status: { type: Status, default: Status.INCOMPLETE },\n}, {\n    timestamps: true,\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
